const router = require ('router')
const bcrypt = require ('bcrypt')

//getting all categories
router.get('/categories',(req,res,next)=>{
  return knex('categories')
  .orderBy('title')
  .then(function(categories){
    res.send(categories)
  })
  .catch(function(err){
    next(err)
  })
})

//getting particular category
router.get('/categories/:id',(req,res,next)=>{
  const id = req.params.id
  return knex('categories')
  .where('id',id)
  .first()
  .then(function(category){
    if(!category){
     return next(error)
    }
    res.send(category)
  })
  .catch(function(err){
    next(err)
  })
})

//adding new category
router.post('/categories',(req,res,next)=>{
  return knex('categories')
  .insert({
    title : req.body.title,
    summary : req.body.summary
  },'*')
  .then(function(category){
    let newCategory{
      id : category[0].id,
      title : category[0].title,
      summary : category[0].summary
    }
    res.send(newCategory)
  })
  .catch(function(err){
    next(err)
  })
})

//editing the category
router.patch('/categories/:id',(req,res,next)=>{
  let id = req.params.id
  return knex('categories')
  .where('id',id)
  .then(function(category){
    if(!category){
      return next(err)
    }
    return knex('categories')
    .update({
      title : req.body.title,
      summary : req.body.summary
    },'*')
    .where('id',id)
  })
  .then(function(item){
    let updatedCategory={
      id: item[0].id,
      title: item[0].title,
      summary: item[0].summary
    }
    res.send(updatedCategory)
  })
  .catch(function(err){
    next(err)
  })
})

//deleting the category
router.delete('/categories/:id',(req,res,next)=>{
  let category
  let id = req.params.id
  knex('categories')
  .where('id',id).first()
  .then(function(item){
    if(!item){
      return next(err)
    }
    category = item
    return knex('categories')
    .del()
    .where('id',id)
  })
  .then(function(){
    delete category.id
    let newCategory={
      title : category.id,
      summary : category.summary
    }
    res.send(newCategory)
  })
  .catch(function(err){
    next(err)
  })
})
